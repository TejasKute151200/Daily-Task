package corejava.scheduleRoom;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Scanner;
import java.util.Map.Entry;

public class ScheduleRoom {
							/* Ignore Comments ..*/
	void showTimeSlots() {
		System.out.println("--->>> Book Your Session <<<---");

		HashMap<Integer, String> hm1 = new HashMap<>();

		hm1.put(1, "Session A: 10.00am - 04.00pm");
		hm1.put(2, "Session B: 04.00pm - 10.00pm");

		for (Entry<Integer, String> serial : hm1.entrySet()) // For Iteration
		{
			System.out.println(serial.getKey() + " " + serial.getValue());

		}
		System.out.println("\n Select Your Session: ");
		Scanner sc = new Scanner(System.in);
		Byte sessionSlotIndex = sc.nextByte();
		System.out.println("--->>> Book Your Time <<<---");		 
//		 if ()
//		 {
//			 
//		 }
		switch (sessionSlotIndex) {
		case 1: {
			HashMap<Integer, String> hm2 = new HashMap<>();
			hm2.put(1, "  10.00am - 11.00am");
			hm2.put(2, "  11.00am - 12.00pm");
			hm2.put(3, "  01.00pm - 02.00pm");
			hm2.put(4, "  02.00pm - 03.00pm");
			hm2.put(5, "  03.00pm - 04.00pm");

			for (Entry<Integer, String> serial : hm2.entrySet()) // For Iteration
			{
				System.out.println(serial.getKey() + " " + serial.getValue());

			}

			System.out.println("\n Select Your Time: ");

			Scanner sc1 = new Scanner(System.in);
			Byte timeSlotIndex = sc.nextByte();

			switch (timeSlotIndex) {

			case 1: {
				System.out.println("Your Slot Has Been Booked..." + hm2.get(1));
				hm2.remove(1);
				
				//System.out.println(" Available Slot: \n ");
				for (Entry<Integer, String> serial : hm2.entrySet()) // For Iteration
				{
					System.out.println(serial.getKey() + " " + serial.getValue());

				}
				
			}
				break;
			case 2: {
				System.out.println("Your Slot Has Been Booked..." + hm2.get(2));
				hm2.remove(2);
				
				for (Entry<Integer, String> serial : hm2.entrySet()) // For Iteration
				{
					System.out.println(serial.getKey() + " " + serial.getValue());
				}
			}
				break;
			case 3: {
				System.out.println("Your Slot Has Been Booked..." + hm2.get(3));
				hm2.remove(3);
				
				for (Entry<Integer, String> serial : hm2.entrySet()) // For Iteration
				{
					System.out.println(serial.getKey() + " " + serial.getValue());

				}
			}
				break;
			case 4: {
				System.out.println("Your Slot Has Been Booked..." + hm2.get(4));
				hm2.remove(4);
				
				for (Entry<Integer, String> serial : hm2.entrySet()) // For Iteration
				{
					System.out.println(serial.getKey() + " " + serial.getValue());

				}
			}
				break;
			case 5: {
				System.out.println("Your Slot Has Been Booked..." + hm2.get(5));
				hm2.remove(5);
				
				for (Entry<Integer, String> serial : hm2.entrySet()) // For Iteration
				{
					System.out.println(serial.getKey() + " " + serial.getValue());

				}
			}
				break;

			default: {
				System.out.println("Invalid Entry.. \n Please Try Again");
				for (Entry<Integer, String> serial : hm2.entrySet()) // For Iteration
				{
					System.out.println(serial.getKey() + " " + serial.getValue());

				}
			}
			}

		}
			break;
		case 2: {
			HashMap<Integer, String> hm3 = new HashMap<>();
			hm3.put(1, "  04.00pm - 05.00pm");
			hm3.put(2, "  05.00pm - 06.00pm");
			hm3.put(3, "  07.00pm - 08.00pm");
			hm3.put(4, "  08.00pm - 09.00pm");
			hm3.put(5, "  09.00pm - 10.00pm");

			for (Entry<Integer, String> serial : hm3.entrySet()) // For Iteration
			{
				System.out.println(serial.getKey() + " " + serial.getValue());

			}

		}
			break;
		default: {
			System.out.println("Invalid Entry.. \n Please Try Again");
		}
		}
}
//		HashMap<Integer,String> hm2 = new HashMap<>();
//		hm2.put(1,"  10.00am - 11.00am");
//		hm2.put(2,"  11.00am - 12.00pm");
//		hm2.put(3,"  01.00pm - 02.00pm");
//		hm2.put(4,"  02.00pm - 03.00pm");
//		hm2.put(5,"  03.00pm - 04.00pm");
//		
//		for (Entry<Integer,String> serial: hm2.entrySet()) //For Iteration
//		{
//			System.out.println(serial.getKey()+" "+serial.getValue());
//			
//		}

//		System.out.println("\nSelect Your Time: ");
//		Scanner sc = new Scanner(System.in);
//		 Byte timeSlotIndex = sc.nextByte();
//		
//		switch (timeSlotIndex)
//		{
//		 
//		case 1:
//		{  
//				
//	
//				
//			}break;
//		case 2:
//		{  
//				
//	
//				
//			}break;
//		case 3:
//		{  
//				
//	
//				
//			}break;
//		case 4:
//		{  
//				
//	
//				
//			}break;
//		case 5:
//		{  
//				
//	
//				
//			}
//		break;
//		
//		default:
//		{  
//				
//	
//				
//			}
//			}

	
//	 void appointmentTimeSlots()
//	 { 
//		
//		 Scanner s = new Scanner(System.in);
//		 byte bookingSlot= s.nextByte();
//		 for(int i=0; i<=appointmentBooking.size()-1;i++)
//		 {
//		 switch(bookingSlot)
//		 {
//			 case 1:
//				 if(appointmentBooking.containsAll(appointmentBooking))
//					{
//						System.out.println("Schedule Busy At This Time");
//					}			
//					else
//					{
//						appointmentBooking.add("10-11");
//						appointmentBooking.add("11-12");
//						appointmentBooking.add("1-2");
//						appointmentBooking.add("2-3");
//						appointmentBooking.add("3-4");
////						for(int i=0; i<=appointmentBooking.size()-1; i++)
////						{
////							System.out.println(i);
////						}
//
//					}
//					break;
//				default:
//						System.out.println("Invalid entry");
//		 }			
//				
//		 }
//	 }
//
////		 for(int i=0; i<=appointm3entBooking.size()-1;i++)
////		 {
////			
////		 }

	public static void main(String[] args) {
		int n=1;
		do {
			
		ScheduleRoom sr = new ScheduleRoom();
		sr.showTimeSlots();
		n++;
		
			}

		while(n>=0);
		
		 
//				Scanner sc2=new Scanner(System.in);
//				sa.appointmentTimeSlots();

		// int book=sc2.nextInt();

	}
}

//		String[] sA = new String[5];
//		sA[0]="10-11";
//		sA[1]="11-12";
//		sA[2]="1-2";
//		sA[3]="2-3";
//		sA[4]="3-4";
//		
//		 for (int i = 0; i < sA.length; i++)
//		 {
//	            System.out.println(sA[i]);
//		 }
